GRANT ALL ON SCHEMA hub TO hub;

CREATE TABLE hub.profile (
    profile_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    profile VARCHAR(50) NOT NULL UNIQUE CHECK (profile IN ('ADM','MOD','BASIC')),
    PRIMARY KEY (profile_id)
);

CREATE TABLE hub.users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    username VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    "password" VARCHAR(255) NOT NULL,
    is_account_non_expired BOOLEAN DEFAULT TRUE,
    is_account_non_locked BOOLEAN DEFAULT TRUE,
    is_credentials_non_expired BOOLEAN DEFAULT TRUE,
    is_enabled BOOLEAN DEFAULT TRUE,
    profile_id BIGINT,
    PRIMARY KEY (user_id),
    CONSTRAINT FK_PROFILE_USERS FOREIGN KEY (profile_id) REFERENCES hub.profile(profile_id)
);

CREATE TABLE hub.course (
    course_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL UNIQUE,
    category VARCHAR(50) NOT NULL CHECK (category IN ('JAVA','C','CPLUSPLUS','CSHARP','GOLANG','COMPUTATION','QA')),
    PRIMARY KEY (course_id)
);

CREATE TABLE hub.topic (
    topic_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(200) NOT NULL,
    question VARCHAR(255) NOT NULL,
    status CHAR(10) DEFAULT 'UNSOLVED' CHECK (status IN ('SOLVED', 'UNSOLVED')),
    created_at TIMESTAMP(6) WITH TIME ZONE,
    user_id BIGINT,
    course_id BIGINT,
    PRIMARY KEY (topic_id),
    CONSTRAINT FK_USERS_TOPIC FOREIGN KEY (user_id) REFERENCES hub.users(user_id),
    CONSTRAINT FK_COURSE_TOPIC FOREIGN KEY (course_id) REFERENCES hub.course(course_id)
);

INSERT INTO hub.profile (profile) VALUES ('ADM');
INSERT INTO hub.profile (profile) VALUES ('MOD');
INSERT INTO hub.profile (profile) VALUES ('BASIC');

INSERT INTO HUB.USERS
(FIRST_NAME, LAST_NAME, USERNAME, EMAIL, PASSWORD, PROFILE_ID)
VALUES('adm', 'adm', 'adm', 'adm@email.com', '$2a$10$dKvyjxi6gbqvGWzchu0dDedZsvTzDvhKp6rf5xVBlTg62pwtZwfCO', 1);

GRANT ALL ON ALL TABLES IN SCHEMA hub TO hub;